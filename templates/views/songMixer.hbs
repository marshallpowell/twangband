{{!< default}}


<div id="app" class="container" ng-app="app" ng-controller="myCtrl">

    <div id="consoleForms" style="display:none;">


        <div id="songInfo">
            <div class="col-sm-12" style="text-align: center">
                {{#if songJSON}}
                <div class="row">
                    <div id="songWav"></div>
                </div>
                <div class="row">
                    <div class="controls">
                        <button class="btn btn-primary btn-sm" data-action="back">
                            <i class="glyphicon glyphicon-step-backward"></i>
                            Backward
                        </button>

                        <button class="btn btn-primary btn-sm" data-action="play">
                            <i class="glyphicon glyphicon-play"></i>
                            Play
                            /
                            <i class="glyphicon glyphicon-pause"></i>
                            Pause
                        </button>

                        <button class="btn btn-primary btn-sm" data-action="stop">
                            <i class="glyphicon glyphicon-stop"></i> Stop
                        </button>

                        <button class="btn btn-primary btn-sm" data-action="forth">
                            <i class="glyphicon glyphicon-step-forward"></i>
                            Forward
                        </button>

                    </div>
                </div>
                {{/if}}
                <h3>
                    {{#if songJSON}}
                        Update your song information
                    {{/if}}

                    {{#unless songJSON}}
                        Create a new song!
                    {{/unless}}
                </h3>
            </div>

            <div class="row">
                <div class="form-group">
                        <label for="songName">Song Name</label>
                        <input type="text" class="form-control" name="Song Name" id="songName" ng-model="songName"
                               placeholder="Enter a name for this song"/>
                </div>
                <div class="form-group">
                    <label for="songName">Description</label>
                    <textarea class="form-control" name="Song Description" id="songDescription" ng-model="songDescription"
                                              placeholder="Enter a description for this song"></textarea>
                </div>
                <div>
                        <label for="trackName">Make Song Public</label>&nbsp;<input type="checkbox" name="Make Song Public" id="songIsPublic" ng-model="songIsPublic"/>
                </div>
                <div class="form-group">
                        <label for="trackName">Tag Your Song</label>&nbsp;<i>(Hit enter after each tag)</i><br />
                        <select name="Song Tags" id="songTags" ng-model="songTags" ng-options="option.name for option in songTags track by option.id" multiple>

                        </select>
                </div>
                <div class="modal-footer" style="padding-top: 5px; text-align:center;">
                        <button type="button" class="btn btn-default" id="modalCloseBtn" data-dismiss="modal">Close</button>
                </div>

            </div>
        </div>

        <div id="newSongFromTrack"  class="modalDialogForm">

            <div class="form-group row">
                <div class="col-sm-4">
                    <label for="newSongName">Song Name</label>
                </div>
                <div class="col-sm-8">
                    <input type="text" class="form-control" id="newSongName"
                           placeholder="Enter a name for this song"/>
                </div>
                <div class="col-sm-4">
                    <label for="newSongDescription">Description</label>
                </div>
                <div class="col-sm-8">
                                <textarea class="form-control" id="newSongDescription"
                                          placeholder="Enter a description for this song"></textarea>
                </div>

            </div>
            <div class="modal-footer">

                <button id="btn_createNewSongFromTrack" type="button" class="btn btn-default btn-lg"
                        onclick="MixerUtil.createNewSongFromTrack();">
                    Create a new song with this track
                </button>
            </div>
        </div>

        <div id="searchUsers"  class="modalDialogForm">

            <div class="row">
                <div class="col-sm-2"><h5>Collaborators: </h5></div>
                <div class="col-sm-10" id="collaborators"></div>
            </div>

            <div class="form-group row" id="searchUsersForm">

                <div class="form-group row">
                    <div class="col-sm-12">
                        <h3>Invite folks to record with you</h3>
                    </div>
                </div>

                <div class="col-sm-3">
                    <input type="text" class="form-control" id="searchFirstName" ng-model="searchFirstName"
                           placeholder="First Name"/>
                </div>
                <div class="col-sm-3">
                    <input type="text" class="form-control" id="searchLastName" ng-model="searchLastName"
                           placeholder="Last Name"/>
                </div>
                <div class="col-sm-3">
                    <input type="text" class="form-control" id="searchEmail" ng-model="searchEmail"
                           placeholder="email"/>
                </div>
                <div class="col-sm-3">
                    <button id="btn_searchCollaborators" type="button" class="btn btn-default btn-lg"
                            onclick="MixerUtil.searchCollaborators();">
                        <span class="glyphicon glyphicon-search"
                              style="vertical-align:middle; display: inline-block"></span>
                    </button>
                </div>

            </div>
            <div id="searchUsersData" class="row"></div>
            <div class="modal-footer" style="padding-top: 5px; text-align:center;">
                <button type="button" class="btn btn-default" id="modalCloseBtn" data-dismiss="modal">Close</button>

            </div>
        </div>


        <div id="trackInfo"  class="modalDialogForm">

            <div class="form-group row">
                <div class="col-sm-4">
                    <label for="trackName">Track Name</label>
                </div>
                <div class="col-sm-8">
                    <input type="text" class="form-control" name="Track Name" id="trackName" ng-model="trackName"
                           placeholder="Enter a name for this track"/>
                </div>
                <div class="col-sm-4">
                    <label for="trackName">Description</label>
                </div>
                <div class="col-sm-8">
                                <textarea class="form-control" name="Track Description" id="trackDescription" ng-model="trackDescription"
                                          placeholder="Enter a description for this track"></textarea>
                </div>
                <div class="col-sm-4">
                    <label for="trackName">Make Track Public</label>
                </div>
                <div class="col-sm-8">
                    <input type="checkbox" class="form-control" name="Make Track Public" id="trackIsPublic" />
                </div>

                <div class="col-sm-4">
                    <label for="trackName">What type of intrument(s) is on this track?</label>
                </div>
                <div class="col-sm-8">

                    <select name="Track Tags" id="trackTags" multiple>

                    </select>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="modalCloseBtn" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>

        <div id="recordingDialog" >
            <div class="row">
                <div id="startTimer" class="col-lg-12"></div>
                <div id="recordingInfo" class="col-lg-12"><span id="countdownInfo"></span>&nbsp;<span id="countdownTimer" style="background-color: #FFFF00"></span></div>
            </div>
        </div>

        <div id="callibrationDialog" >
            <div class="row">
                <div id="callibrationDirections" class="col-lg-12">Before you begin recording, we need to callibrate your system's audio input and output. You will need to be very quiet and put your microphone as close to your speaker as possible. You will hear a series of 5 clicks, and the test will be complete. Please click below to proceed</div>
                <div id="callibrationResults" class="col-lg-12"></div>
                <div id="" class="col-lg-12">

                    <button id="bcallibrate"
                            onclick="MixerUtil.callibrateSystem();"
                            title="Callibrate System"
                            type="button" class="btn btn-primary btn-sm">
                        <span class="glyphicon glyphicon-time"></span> Callibrate Your System
                    </button>
                </div>
            </div>
        </div>

    </div>

    <div class="row">
        <div id="masterTools" class="row">


            <a href="#" onclick="MixerUtil.toggleEditSong();" ><span class="glyphicon glyphicon-pencil"></span> Edit Song: </span><span ng-bind="songName"></span></a>

            <button id="bcollaborators" type="button" class="btn btn-primary btn-sm"
                    onclick="MixerUtil.toggleSearchUsers();"
                    title="Find collaborators to add tracks to this song"
                    >
                <span class="glyphicon glyphicon-user"></span> Collaborate
            </button>

            <button id="bsaveSong" type="button" class="btn btn-primary btn-sm"
                    onclick="mixer.saveSong();"
                    title="Save song"
                    >
                <span class="glyphicon glyphicon-floppy-disk"></span> Save
            </button>

            <button id="bplay" type="button" class="btn btn-primary btn-sm"
                    onclick="mixer.playPauseAll();"
                    title="Play song" >
                <span class="glyphicon glyphicon-play"></span> Play / <span class="glyphicon glyphicon-pause"></span> Pause
            </button>

            <button id="bstop"
                    onclick="mixer.stopAll();"
                    title="Stop playing"
                    type="button" class="btn btn-primary btn-sm">
                <span class="glyphicon glyphicon-stop"></span> Stop
            </button>

            <button id="brecordMix"
                    onclick="initAudio();" type="button"
                    title="Click to start recording."
                    class="btn btn-primary btn-sm">
                <span class="glyphicon glyphicon-record"></span> Record
            </button>

           <!-- <span id='masterVolumeSpan' width="200"><input type='range' class = 'volumeSlider' id='masterVolume' min='0' max = '100' value='100' style='width:200px; display:inline' oninput='mixer.adjustSongVolume(this.value);'/></span> -->



        </div>
    </div>
    <div class="row" style="background-color: #fff">

        <div id="recordingWav" style="display:none;">
            <div id="viz" class="col-lg-12">
                <canvas id="analyser" width="500" height="200"></canvas>
            </div>
        </div>

        <div id="scroll">

            <div class="col-md-2"></div>
            <div id="tracksTop" class="col-md-10"></div>

        </div>

    </div>


</div>

<div class="container">
    <div class="row">
        <div id="disqus_thread"></div>
        <script>
            /**
             * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
             * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
             */

            var disqus_config = function () {

                this.page.url = '{{pageUrl}}';
                this.page.identifier = '{{disqusTopicId}}';
                this.page.remote_auth_s3 = '{{disqusAuth}}';
                this.page.api_key = '{{DISQUS_API_PUBLIC_KEY}}';

                // This adds the custom login/logout functionality
                this.sso = {
                    name:   "twangband",
                    button:  "http://twangband.com/images/facebook_login.png",
                    //icon:     "http://example.com/favicon.png",
                    url:        "http://twangband.com/login/",
                    logout:  "http://twangband.com/logout/",
                    width:   "200",
                    height:  "50"
                };
            };

            (function() { // DON'T EDIT BELOW THIS LINE
                var d = document, s = d.createElement('script');

                s.src = '//twangband.disqus.com/embed.js';

                s.setAttribute('data-timestamp', +new Date());
                (d.head || d.body).appendChild(s);
            })();
        </script>


    </div>

    <div class="row">
        <br />
        <p align="center">
            <a href="http://www.mozilla.org/en-US/" title="Download the Mozilla Firefox Web Browser" target="_blank"><img src="/img/firefoxLogo.png" alt="Download the Mozilla Firefox Web Browser" height="71" border="0" width="204"></a>&nbsp;&nbsp; <a href="https://www.google.com/intl/en/chrome/#cds" title="Download the Google Chrome Web Browser" target="_blank"><img src="/img/chromeLogo.png" alt="Download the Google Chrome Web Browser" height="69" border="0" width="251"></a>
            <br />We currently only support Google Chrome and Firefox

        </p>
    </div>
</div>
<script language="JavaScript">
{{#if songJSON}}
var songDto = {{{songJSON}}};
{{/if}}

{{#unless songJSON}}
var songDto = null;
{{/unless}}

{{#if user}}
var user = {{{json user}}};
{{/if}}

{{#unless user}}
var user = null;
{{/unless}}
</script>

<script src="js/lib/models/SearchCriteriaDto.js"></script>
<script src="js/lib/models/SongDto.js"></script>
<script src="js/lib/models/TrackDto.js"></script>
<script src="js/lib/models/EditDto.js"></script>
<script src="js/lib/models/RecordingDto.js"></script>
<script src="js/lib/models/RecordingResponseDto.js"></script>
<script src="js/lib/util/AppConstants.js"></script>
<script src="js/lib/validation/SongValidation.js"></script>

<script src="js/lib/util/Logger.js"></script>
<script src="/js/lib/recorderjs/recorder.js"></script>
<script src="js/lib/wavesurfer/wavesurfer.min.js"></script>
<script src="js/lib/wavesurfer/wavesurfer.regions.js"></script>
<script src="js/lib/mixer/TrackMixer.js"></script>
<script src="js/lib/mixer/SongMixer.js"></script>
<script src="js/lib/mixer/MixerUtil.js"></script>
<script src="js/lib/mixer/Mic.js"></script>

<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css" rel="stylesheet">

<script language="JavaScript">
    var mixer;
    var tags = {};
    var log = new Logger('DEBUG');
    var app = angular.module('app', []);

    $(document).ready(function () {

        //attach onChange event handler to all form elements
        $('input').change(function(){
            MixerUtil.notifyOfChanges(this.name + ' changed to: ' + this.value);
        });

        $('textarea').change(function(){
            MixerUtil.notifyOfChanges(this.name + ' changed to: ' + this.value);
        });

        $.notify.defaults({autoHide : true, className : 'info'});

        tags = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            prefetch: {
                url: '/listData?type=instruments',
                filter: function(list) {
                    return $.map(list, function(instrument) {
                        return { name: instrument }; });
                },
                cache : false
            }
        });

        tags.initialize();

        $('#songTags').tagsinput({
            typeaheadjs: {
                hint: true,
                autoselect: true,
                highlight: true,
                minLength: 1,
                limit : 10,
                name: 'instruments',
                displayKey: 'name',
                valueKey: 'name',
                source: tags.ttAdapter()
            }
        });

        mixer = new SongMixer(songDto).init();
        //sound.js ... init(songDto);


        if(songDto == null){
            MixerUtil.toggleEditSong();
        }


    });

    var songWavesurfer = Object.create(WaveSurfer);
    app.controller('myCtrl', function ($scope) {


        if (songDto != null) {
            console.log("setting scope variables with name: " + songDto.name + ', tags length: '+songDto.tags.length);
            $scope.songName = songDto.name;
            $scope.songDescription = songDto.description;
            $scope.songIsPublic = songDto.isPublic;
            $scope.songTags = [];//songDto.tags;

            if(songDto.fileName){

                var GLOBAL_ACTIONS = {
                    'play': function () {
                        songWavesurfer.playPause();
                    },

                    'back': function () {
                        songWavesurfer.skipBackward();
                    },

                    'forth': function () {
                        songWavesurfer.skipForward();
                    },

                    'stop': function () {
                        songWavesurfer.stop();
                    }
                };

                [].forEach.call(document.querySelectorAll('[data-action]'), function (el) {
                    el.addEventListener('click', function (e) {
                        var action = e.currentTarget.dataset.action;
                        if (action in GLOBAL_ACTIONS) {
                            e.preventDefault();
                            GLOBAL_ACTIONS[action](e);
                        }
                    });
                });
            }


            for(var i=0; i < songDto.tags.length; i++){
                $scope.songTags.push({id : songDto.tags[i], name : songDto.tags[i]});
                console.log('tag name: ' + $scope.songTags[i].name);
            }

        }
        else{

            var name = "anonymous";
            if(user){
                name = user.firstName;
            }

            name += " track " + new Date().toLocaleString();
            $scope.songName = name.replace(/ /g,"_").replace(/,/g,"");
            // $scope.songName = name + " track " + new Date().toLocaleString();

        }

    });


</script>

<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <span class="mblue">music</span><span class="mgreen">ilo</span>
                <button type="button" class="close" id="modalXCloseBtn" data-dismiss="modal">&times;</button>

            </div>
            <div class="modal-body " >
                <div id="notificationBody" class="modalNotificationBody"><p id="foo"></p></div>
            </div>

        </div>

    </div>
</div>

<div id="savingModal" class="modal fade" >
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body" >
                <div id="notificationBody"><p><span class="fa fa-spinner fa-pulse"></span> Saving...</p></div>
            </div>
        </div>
    </div>
</div>


<div id="trash" style="display:none"></div>


<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
<script id="dsq-count-scr" src="//twangband.disqus.com/count.js" async></script>
